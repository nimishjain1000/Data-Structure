public class Solution {
    public int[] productExceptSelf(int[] nums) {
        
        int n=nums.length;
        int []l=new int[n];
        int []r=new int[n];
        int []res=new int[n];
        
        l[0]=1;
        r[n-1]=1;
        
        for(int i=0;i<n-1;i++)
        {
            l[i+1]=l[i]*nums[i];
        }
        for(int i=n-1;i>0;i--)
        {
            r[i-1]=r[i]*nums[i];
        }
        
        for(int i=0;i<n;i++)
        {
          res[i]=l[i]*r[i];
        }
        return res;
    }
}


// in o(n) 
public class Solution {
    public int[] productExceptSelf(int[] nums) {
        
        int n=nums.length;
       
        int []res=new int[n];
        res[n-1]=1;
       for(int i= n-2;i>=0;i--)
       {
           res[i]=res[i+1]*nums[i+1];
       }
       int left=1;
       for(int i=0;i<n;i++)
       {
           res[i]=res[i]*left;
           left=left*nums[i];
       }
       return res;
    }
}
