/**

LEETCODE SOLUTION OF LCA 

 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        
        if(root==null)
        return root;
        if(root==p || root==q)
        return root;
        TreeNode left=lowestCommonAncestor(root.left,p,q);
        TreeNode right=lowestCommonAncestor(root.right,p,q);
        if(left!=null&&right!=null)
        return root;
        if(left==null&&right==null)
        return null;
        
        return left!=null?left:right;
        
    }
}


//
public class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root==null)
        return null;
        if(root==p||root==q) return root;
        
        root.left=lowestCommonAncestor(root.left,p,q);
        root.right=lowestCommonAncestor(root.right,p,q);
        
        if(root.left!=null && root.right!=null) return root;
        if(root.left==null && root.right==null) return null;
        
        return root.left!=null ?root.left :root.right;
        
    }
}
