/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        
        vector<int> res;
        stack<pair<TreeNode*, bool>> st;
        
        st.emplace(root,false);
        
        while(st.empty()!=true){
            bool visited;
            
            tie(root, visited) = st.top();
            st.pop();
            
            if(root == nullptr)
            {
                continue;
            }
            if(visited){
                res.push_back(root->val);
            }
            else{
                st.emplace(root->right, false);
                st.emplace(root->left, false);
                st.emplace(root, true);
            }
        }
        return res;
    }
};
