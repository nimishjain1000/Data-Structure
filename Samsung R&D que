/* Written test :
Online test consisting of a coding question, which was to be solved in 3 hours.

Given an integer ‘K’ and a tree in string format. We had to print the sum of all elements at Kth level from root.

Tree was given in the form: (node value(left subtree)(right subtree))
For tree given above: (0(5(6()())(4()(9()())))(7(1()())(3()())))
Input format: K Tree
Output format: Sum
For example, for given tree:
Input: 2 (0(5(6()())(4()(9()())))(7(1()())(3()())))
Output: 14
*/

    #include<iostream>
    #include<cstring>
    using namespace std;
    int main()
    {
    	string s;
    	cin>>s;
    	int k;
    	cin>>k;
    	int l=s.length();
    	int sum=0;
    	int level=-1;
    	for(int i=0;i<l;i++)
    	{
     
    		if(s[i]=='(')
    		{
    			level++;
    		}
    		else if(s[i]==')')
    		{
    			level--;
    		}
    		else if(level==k)
    		{
     
    			int x=s[i]-'0';
    			i++;			//Move to next character in string
    			while(s[i]>=48 && s[i]<=57)
    			{
    				int d=s[i]-'0';
    				x=x*10+d;
    				i++;
    			}
    			i--;			//One step back since loop will do an extra increment
    			sum+=x;
     
    		}
     
    	}
    	cout<<sum;
    	return 0;
    }
